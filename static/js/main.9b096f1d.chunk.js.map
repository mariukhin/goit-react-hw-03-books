{"version":3,"sources":["components/BookListItem/BookListItem.module.css","components/BookList/BookList.module.css","components/SearchForm/SearchForm.module.css","components/SearchForm/SearchForm.js","components/BookListItem/BookListItem.js","components/BookList/BookList.js","components/ErrorNotification/ErrorNotification.js","components/App.js","components/helper.js","index.js"],"names":["module","exports","bookItem","imgBlock","textBlock","bookList","bookListItem","form","nameInput","genreSelect","submitBtn","SearchForm","state","bookName","bookGenre","selectedOption","handleInputChange","_ref","target","name","value","_this","setState","Object","defineProperty","changeOption","option","handleSubmit","e","preventDefault","onSubmit","props","objectSpread","_this$state","this","genres","react_default","a","createElement","className","styles","type","placeholder","onChange","react_select_esm","options","Component","BookListItem","img","title","description","author","publisher","publishedDate","pageCount","rating","alt","src","defaultProps","BookList","items","map","item","key","id","components_BookListItem_BookListItem","ErrorNotification","text","API_URL","App","books","isLoading","error","fetchItems","genre","RESULT_URL","concat","toLowerCase","axios","get","then","response","data","volumeInfo","imageLinks","thumbnail","authors","averageRating","catch","finally","formSubmit","SearchForm_SearchForm","components_ErrorNotification_ErrorNotification","message","dist_default","color","length","components_BookList_BookList","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9b096f1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookItem\":\"BookListItem_bookItem__2vwd8\",\"imgBlock\":\"BookListItem_imgBlock__2F5rw\",\"textBlock\":\"BookListItem_textBlock__3KjBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookList\":\"BookList_bookList__3cRMW\",\"bookListItem\":\"BookList_bookListItem__1IgGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchForm_form__2AreI\",\"nameInput\":\"SearchForm_nameInput__1QAAb\",\"genreSelect\":\"SearchForm_genreSelect__19DCk\",\"submitBtn\":\"SearchForm_submitBtn__3Ov-m\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport styles from './SearchForm.module.css';\n\nexport default class SearchForm extends Component {\n  state = {\n    bookName: '',\n    bookGenre: '',\n    selectedOption: null,\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  };\n\n  handleInputChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  changeOption = option => {\n    this.setState({ bookGenre: option.value, selectedOption: option });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSubmit } = this.props;\n    onSubmit({ ...this.state });\n  };\n\n  render() {\n    const { bookName, selectedOption } = this.state;\n    const { genres } = this.props;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <input\n          className={styles.nameInput}\n          type=\"text\"\n          placeholder=\"Enter genre\"\n          name=\"bookName\"\n          value={bookName}\n          onChange={this.handleInputChange}\n        />\n        <Select\n          value={selectedOption}\n          onChange={this.changeOption}\n          options={genres}\n          className={styles.genreSelect}\n          placeholder=\"Select genre..\"\n        />\n        <button className={styles.submitBtn} type=\"submit\">\n          Search\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './BookListItem.module.css';\n\nconst BookListItem = ({\n  img,\n  title,\n  description,\n  author,\n  publisher,\n  publishedDate,\n  pageCount,\n  rating,\n}) => (\n  <div className={styles.bookItem}>\n    <div className={styles.imgBlock}>\n      <img className=\"itemImg\" alt=\"img\" src={img} />\n    </div>\n    <div className={styles.textBlock}>\n      <h2 className=\"title\">{title}</h2>\n      <p className=\"description\">{description}</p>\n      <p className=\"author\">\n        <b>Author: </b> {author}\n      </p>\n      <p className=\"publisher\">\n        <b>Publisher: </b>\n        {publisher}\n      </p>\n      <p className=\"publishedDate\">\n        <b>Published date: </b> {publishedDate}\n      </p>\n      <p className=\"pageCount\">\n        <b>Page count: </b>\n        {pageCount}\n      </p>\n      <p className=\"rating\">\n        <b>Rating: </b>\n        {rating}\n      </p>\n    </div>\n  </div>\n);\nBookListItem.defaultProps = {\n  author: 'No author',\n  rating: 0.0,\n};\nBookListItem.propTypes = {\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  author: PropTypes.arrayOf(PropTypes.string),\n  publisher: PropTypes.string.isRequired,\n  publishedDate: PropTypes.string.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  rating: PropTypes.number,\n};\nexport default BookListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BookListItem from '../BookListItem/BookListItem';\nimport styles from './BookList.module.css';\n\nconst BookList = ({ items }) => (\n  <ul className={styles.bookList}>\n    {items.map(item => (\n      <li className={styles.bookListItem} key={item.id}>\n        <BookListItem {...item} />\n      </li>\n    ))}\n  </ul>\n);\nBookList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      author: PropTypes.arrayOf(PropTypes.string),\n      publisher: PropTypes.string.isRequired,\n      publishedDate: PropTypes.string.isRequired,\n      pageCount: PropTypes.number.isRequired,\n      rating: PropTypes.number,\n    }).isRequired,\n  ).isRequired,\n};\nexport default BookList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ErrorNotification = ({ text }) => (\n  <h1>Whoops, something went wrong: {text}</h1>\n);\nErrorNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\nexport default ErrorNotification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Spinner from 'react-spinkit';\nimport mapper from './helper';\nimport SearchForm from './SearchForm/SearchForm';\nimport BookList from './BookList/BookList';\nimport ErrorNotification from './ErrorNotification/ErrorNotification';\n\nconst API_URL = 'https://www.googleapis.com/books/v1/volumes?';\n\nexport default class App extends Component {\n  static propTypes = {\n    genres: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  };\n\n  state = {\n    books: [],\n    isLoading: false,\n    error: null,\n  };\n\n  fetchItems = (name, genre) => {\n    const RESULT_URL = `${API_URL}q=${name.toLowerCase()}+subject:${genre}`;\n    axios\n      .get(RESULT_URL)\n      .then(response => this.setState({ books: mapper(response.data.items) }))\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  formSubmit = ({ bookName, bookGenre }) => {\n    this.setState({ isLoading: true });\n    this.fetchItems(bookName, bookGenre);\n  };\n\n  render() {\n    const { books, isLoading, error } = this.state;\n    const { genres } = this.props;\n    return (\n      <div>\n        <SearchForm genres={genres} onSubmit={this.formSubmit} />\n        {error && <ErrorNotification text={error.message} />}\n        {isLoading && (\n          <Spinner\n            name=\"ball-spin-fade-loader\"\n            color=\"blue\"\n            className=\"loader\"\n          />\n        )}\n        {books.length > 0 && <BookList items={books} />}\n      </div>\n    );\n  }\n}\n","/*eslint-disable*/\nexport default function mapper(books) {\n  return books\n    .map(({ id, volumeInfo }) => ({\n      id,\n      volumeInfo,\n    }))\n    .map(\n      item =>\n        (item = {\n          id: item.id,\n          img: item.volumeInfo.imageLinks.thumbnail,\n          title: item.volumeInfo.title,\n          description: item.volumeInfo.description,\n          author: item.volumeInfo.authors,\n          publisher: item.volumeInfo.publisher,\n          publishedDate: item.volumeInfo.publishedDate,\n          pageCount: item.volumeInfo.pageCount,\n          rating: item.volumeInfo.averageRating,\n        }),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport genres from './genres.json';\n\nReactDOM.render(<App genres={genres} />, document.getElementById('root'));\n"],"sourceRoot":""}